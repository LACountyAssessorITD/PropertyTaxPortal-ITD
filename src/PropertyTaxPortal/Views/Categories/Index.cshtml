@model ReflectionIT.Mvc.Paging.PagingList<PropertyTaxPortal.Models.Category>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@*@{
        ViewData["Title"] = "Index";
    }*@

<h1>Index</h1>
<script src="../js/jquery-1.7.1.js" type="text/javascript"></script>
<script src="../js/jquery-1.7.1.min.js" type="text/javascript"></script>
<script type="text/javascript">
       function Delete(id){
           var txt;
         var del = confirm('Are you sure you want to delete?');
         if(del == true)
         {
             
             $.ajax(
                 {
                     
                     type: "GET",
                     url: '@Url.Action("Delete", "Categories")',
                     data: {
                         id: id
                     },
                     error: function (result) {
                         alert("error");
                     },
                     success: function (result) {
                         alert(id);
                         if (result == true) {
                             var baseUrl = "/Index";
                             window.location.reload();
                         }
                         else {
                             alert("There is a problem, Try Later!");
                         }
                     }
                 });
         }
    }
</script>

<nav aria-label="Suppliers navigation example">
    @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
</nav>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Descr)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.categoryType)
            </th>
            <th><a asp-action="CreateorEdit" class="btn btn-outline-success"><i class="far fa-plus-square"></i>Create Category</a></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Descr)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.categoryType)
                </td>
                <td>
                    <a asp-action="DownArrow" asp-route-pagenum="@Model.PageIndex" asp-route-id="@item.CategoryID"><img src="~/images/downArrow.gif" /></a>
                    <a asp-action="UpArrow" asp-route-id="@item.CategoryID" asp-route-pagenum="@Model.PageIndex"><img src="~/images/upArrow.gif" sizes="30px" /> </a> |
                    <a asp-action="CreateorEdit" asp-route-id="@item.CategoryID">Edit</a> |
                    @*<a asp-action="Delete" onclick="Delete('@item.CategoryID')">Delete</a>*@
                    <a href="" onclick="Delete('@item.CategoryID')">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<nav aria-label="Suppliers navigation example">
    <vc:pager paging-list="@Model" />
</nav>
